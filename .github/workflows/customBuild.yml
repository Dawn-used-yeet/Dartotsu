name: customBuild
on:
  push:
    branches:
      - main

jobs:
  build_android:
    runs-on: ubuntu-latest
    # Only run if commit message contains [build.apk]
    if: contains(github.event.head_commit.message, '[build.apk]')
    
    permissions:
      contents: write
      pull-requests: read
      actions: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Cache Flutter dependencies
      - uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            build/
            .dart_tool/
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      # Cache Gradle dependencies
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.24.1
          cache: true

      # Configure Gradle for faster builds
      - name: Configure Gradle
        run: |
          mkdir -p ~/.gradle
          echo "org.gradle.daemon=true" >> ~/.gradle/gradle.properties
          echo "org.gradle.parallel=true" >> ~/.gradle/gradle.properties
          echo "org.gradle.caching=true" >> ~/.gradle/gradle.properties

      # Optimize Flutter build
      - run: flutter pub get
      - run: flutter build apk --release --split-debug-info --shrink
      
      - name: Rename APK
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/Dantotsu_Android_${{github.ref_name}}.apk

      - name: Upload File To Google Drive
        id: gdriveUpload
        uses: hoatruongdev09/google-drive-file-upload-github-action@v1.1
        with:
          file-path: build/app/outputs/flutter-apk/Dantotsu_Android_${{github.ref_name}}.apk
          upload-name: Dartotsu.apk
          upload-to-folder-id: 1nWYex54zd58SVitJUCva91_4k1PPTdP3
          service-account-json: "${{secrets.GOOGLE_KEY}}"
          overrwrite: true

      - name: Send Download link to discord after Build
        run: |
          curl -H "Content-Type: application/json" \
               -d '{"content": "A new apk is here check it out: [Dartotsu](${{steps.gdriveUpload.outputs.web-content-link}})"}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}
  build_windows:
    runs-on: windows-latest
    if: contains(github.event.head_commit.message, '[build.windows]')
    permissions: 
        contents: write
        pull-requests: write
        repository-projects: write
    steps:
      - name: Cloing repository
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.24.1
      - run: flutter pub get
      - run: flutter build windows
      - name: Archive App
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: Dantotsu_Windows_${{github.ref_name}}.zip
          directory: build\windows\x64\runner\Release
      - name: Upload File To Google Drive
        id: gdriveUpload
        uses: hoatruongdev09/google-drive-file-upload-github-action@v1.1
        with:
          file-path: build/windows/x64/runner/Release/Dantotsu_Windows_${{github.ref_name}}.zip
          upload-name: Dartotsu_windows.zip
          upload-to-folder-id: 1nWYex54zd58SVitJUCva91_4k1PPTdP3
          service-account-json: "${{secrets.GOOGLE_KEY}}"
          overrwrite: true
      - name: Send Download link to discord after Build
        id: dealing
        run: |
          $payload = '{"content": "A new windows build is here check it out: [Dartotsu Windows](${{steps.gdriveUpload.outputs.web-content-link}})"}'
          Invoke-RestMethod -Uri ${{secrets.DISCORD_WEBHOOK_URL}} -Method Post -Body $payload -ContentType 'application/json'
        shell: pwsh
      
